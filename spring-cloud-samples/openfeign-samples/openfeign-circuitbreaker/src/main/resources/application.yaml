server:
  # 设置服务器端口
  port: 8080

spring:
  application:
    # 应用名称设置
    name: feign-circuitbreaker

  cloud:
    # === Spring Cloud 服务发现 ===
    discovery:
      enabled: true

    # === Spring Cloud 负载均衡 ===
    loadbalancer:
      nacos:
        enabled: true

    # === Spring Cloud 服务注册 ===
    service-registry:
      auto-registration:
        enabled: true

    # === Nacos 中间件配置 ===
    nacos:
      discovery:
        server-addr: localhost:8848

    # === Spring Cloud Resilience4J 设置 ===
    circuitbreaker.resilience4j:
      # 是否开启
      enabled: true

    # === Open Feign 配置 ===
    openfeign:
      # --- 熔断器设置 ---
      circuitbreaker:
        # 启用熔断器机制
        enabled: true
        # 熔断器 ID 名称是否只包含字母数字，默认 true
        # 例如：HttpBinClient#pathVar(Integer) 方法：
        #   设置 true 时，熔断器 ID 名称为：HttpBinClientpathVarInteger
        #   设置 false 时，熔断器 ID 名称为：HttpBinClient#pathVar(Integer)
        alphanumeric-ids:
          enabled: true

# === Spring Boot Resilience4J 设置 ===
resilience4j:
  # -- 时间限制配置 --
  timelimiter:
    # 配置
    configs:
      # 设置 HttpBinClient#pathVar(Integer) 方法的熔断器参数
      HttpBinClientpathVarInteger:
        timeout-duration: 3s
        # 超过时间限制是否中断任务的执行线程
        cancel-running-future: true

# === 日志 ===
logging:
  level:
    # -- HttpBinClient Feign 客户端日志级别为 DEBUG ---
    io.github.reionchan.client.HttpBinClient: DEBUG

# === Spring 环境引入 Maven 变量 ===
# 使用 @ 符号包含 maven 变量
# 详细：https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-1.3-Release-Notes#maven-resources-filtering
maven:
  version: @project.version@